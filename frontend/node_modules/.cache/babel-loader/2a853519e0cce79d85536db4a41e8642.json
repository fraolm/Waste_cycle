{"ast":null,"code":"var _jsxFileName = \"/Users/fraol/Desktop/IBM-frontend-backend/frontend/src/components/estimator_payment.js\";\nimport React from 'react';\nimport '../App.css';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Estimator(amountIN) {\n  const vals = {\n    brickNumber: amountIN,\n    petFactor: 0.02,\n    flyAshFactor: 0.2,\n    cementFactor: 0.7,\n    sandFactor: 0.08,\n    cementFactorOriginal: 0.92,\n    sandFactorOriginal: 0.08,\n    petPrice: 3,\n    flyAshPrice: 1,\n    cementPrice: 100,\n    sandPrice: 1,\n    petCO2: 4,\n    flyAshCO2: 0,\n    cementCO2: 100,\n    sandCO2: 0\n  };\n  const state = {\n    currentPrice: vals.petFactor * vals.brickNumber * vals.petPrice + vals.flyAshFactor * vals.brickNumber * vals.flyAshPrice + vals.cementFactor * vals.brickNumber * vals.cementPrice + vals.sandFactor * vals.brickNumber * vals.sandPrice,\n    originalPrice: vals.cementFactorOriginal * vals.brickNumber * vals.cementPrice + vals.sandFactorOriginal * vals.brickNumber * vals.sandPrice,\n    currentCO2: vals.petFactor * vals.brickNumber * vals.petCO2 + vals.flyAshFactor * vals.brickNumber * vals.flyAshCO2 + vals.cementFactor * vals.brickNumber * vals.cementCO2 + vals.sandFactor * vals.brickNumber * vals.sandCO2,\n    originalCO2: vals.cementFactorOriginal * vals.brickNumber * vals.cementCO2 + vals.sandFactorOriginal * vals.brickNumber * vals.sandCO2\n  };\n  const saved = {\n    moneySaved: state.originalPrice - state.currentPrice,\n    CO2Saved: state.originalCO2 - state.currentCO2\n  };\n\n  function createData(thingy, otherThingy) {\n    return {\n      thingy,\n      otherThingy\n    };\n  }\n\n  const rows = [createData('You have saved ', '$' + saved.moneySaved.toFixed(2)), createData('You were spending ', '$' + state.originalPrice.toFixed(2)), createData('You have prevented the release of ', saved.CO2Saved.toFixed(2) + ' grams of CO2')];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    \"aria-label\": \"simple table\",\n    children: /*#__PURE__*/_jsxDEV(TableBody, {\n      children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n        children: /*#__PURE__*/_jsxDEV(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '15px'\n            },\n            children: [row.thingy, /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: row.otherThingy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 76\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)\n      }, row.thingy, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 21\n  }, this);\n}\n\n_c = Estimator;\nexport default Estimator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Estimator\");","map":{"version":3,"sources":["/Users/fraol/Desktop/IBM-frontend-backend/frontend/src/components/estimator_payment.js"],"names":["React","Table","TableBody","TableCell","TableRow","Estimator","amountIN","vals","brickNumber","petFactor","flyAshFactor","cementFactor","sandFactor","cementFactorOriginal","sandFactorOriginal","petPrice","flyAshPrice","cementPrice","sandPrice","petCO2","flyAshCO2","cementCO2","sandCO2","state","currentPrice","originalPrice","currentCO2","originalCO2","saved","moneySaved","CO2Saved","createData","thingy","otherThingy","rows","toFixed","map","row","fontSize"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../App.css'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\n\n\n\nfunction Estimator (amountIN) {\n    const vals = {\n        brickNumber: amountIN,\n        petFactor: 0.02,\n        flyAshFactor: 0.2,\n        cementFactor: 0.7,\n        sandFactor: 0.08,\n\n        cementFactorOriginal: 0.92,\n        sandFactorOriginal: 0.08,\n\n        petPrice: 3,\n        flyAshPrice: 1,\n        cementPrice: 100,\n        sandPrice: 1,\n\n        petCO2: 4,\n        flyAshCO2: 0,\n        cementCO2: 100,\n        sandCO2: 0,\n    };\n\n    const state = {\n        currentPrice: (vals.petFactor * vals.brickNumber * vals.petPrice) + (vals.flyAshFactor * vals.brickNumber * vals.flyAshPrice) + (vals.cementFactor * vals.brickNumber * vals.cementPrice) + (vals.sandFactor * vals.brickNumber * vals.sandPrice),\n        originalPrice: (vals.cementFactorOriginal * vals.brickNumber * vals.cementPrice) + (vals.sandFactorOriginal * vals.brickNumber * vals.sandPrice),\n\n        currentCO2: (vals.petFactor * vals.brickNumber * vals.petCO2) + (vals.flyAshFactor * vals.brickNumber * vals.flyAshCO2) + (vals.cementFactor * vals.brickNumber * vals.cementCO2) + (vals.sandFactor * vals.brickNumber * vals.sandCO2),\n        originalCO2: (vals.cementFactorOriginal * vals.brickNumber * vals.cementCO2) + (vals.sandFactorOriginal * vals.brickNumber *vals.sandCO2)\n    }\n\n    const saved = {\n        moneySaved: state.originalPrice - state.currentPrice,\n        CO2Saved: state.originalCO2 - state.currentCO2\n    }\n\n    function createData(thingy, otherThingy) {\n        return { thingy, otherThingy };\n        }\n        \n    const rows = [\n    createData('You have saved ', '$'+saved.moneySaved.toFixed(2)),\n    createData('You were spending ', '$'+state.originalPrice.toFixed(2)),\n    createData('You have prevented the release of ', saved.CO2Saved.toFixed(2)+' grams of CO2')\n    ];\n\n        return(\n\n                    <Table  aria-label=\"simple table\">\n\n                        <TableBody>\n                        {rows.map((row) => (\n                            <TableRow key={row.thingy}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {<p style={{fontSize: '15px'}}>{row.thingy}<strong>{row.otherThingy}</strong></p>}\n                            </TableCell>\n\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n        )\n                        }\n\n\nexport default Estimator"]},"metadata":{},"sourceType":"module"}