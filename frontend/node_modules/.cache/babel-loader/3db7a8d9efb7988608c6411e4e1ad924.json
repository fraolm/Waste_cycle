{"ast":null,"code":"var _jsxFileName = \"/Users/fraol/Desktop/IBM-frontend-backend/frontend/src/components/buy_material.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport { Divider } from '@material-ui/core';\nimport Estimator from './estimator_payment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 170\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  }\n}));\nexport default function VerticalLinearStepper() {\n  _s();\n\n  const [state, setState] = React.useState({\n    washed: false,\n    WashedAndShredded: false,\n    NotProcessed: false\n  });\n  const [state2, setState2] = React.useState({\n    cash: false,\n    online: false\n  });\n  const [addplasticCase0, setAddplasticCase0] = React.useState();\n  const [addweightCase1, setAddweightCase1] = React.useState({\n    vals: '0'\n  });\n  var methodselectedCase2 = Object.keys(state).find(key => state[key] === true);\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n  const history = useHistory();\n\n  const sendpost = async () => {\n    await axios.get('/theuserss').then(response => {\n      const resp = response.data[response.data.length - 1].id;\n      send(resp);\n    });\n  };\n\n  const send = async resp => {\n    await axios({\n      method: 'post',\n      url: '/userpost',\n      data: {\n        body: {\n          user_id: resp,\n          plastic: addplasticCase0,\n          weight: addweightCase1,\n          method: methodselectedCase2\n        }\n      }\n    }).then(history.push('/'));\n  };\n\n  const handleChange1 = event => {\n    setAddweightCase1(event.target.value);\n  };\n\n  const handleChange = event => {\n    if (event.target.checked === true) {\n      setState({\n        washed: true,\n        WashedAndShredded: false,\n        NotProcessed: false\n      });\n    } else {\n      setState({ ...state,\n        [event.target.name]: event.target.checked\n      });\n    }\n  };\n\n  const handleChangeb = event => {\n    if (event.target.checked === true) {\n      setState({\n        washed: false,\n        WashedAndShredded: true,\n        NotProcessed: false\n      });\n    } else {\n      setState({ ...state,\n        [event.target.name]: event.target.checked\n      });\n    }\n  };\n\n  const handleChangec = event => {\n    if (event.target.checked === true) {\n      setState({\n        washed: false,\n        WashedAndShredded: false,\n        NotProcessed: true\n      });\n    } else {\n      setState({ ...state,\n        [event.target.name]: event.target.checked\n      });\n    }\n  };\n\n  const handleChanged = event => {\n    if (event.target.checked === true) {\n      setState2({\n        cash: true,\n        online: false\n      });\n    } else {\n      setState2({ ...state,\n        [event.target.name]: event.target.checked\n      });\n    }\n  };\n\n  const handleChangee = event => {\n    if (event.target.checked === true) {\n      setState2({\n        cash: false,\n        online: true\n      });\n    } else {\n      setState2({ ...state,\n        [event.target.name]: event.target.checked\n      });\n    }\n  };\n\n  function getSteps() {\n    return ['Type of material', 'Amount of material', 'Condition of material'];\n  }\n\n  function GetStepContent(step) {\n    switch (step) {\n      case 0:\n        return 'What material are you looking for', /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"Type of material\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"dl\",\n            id: \"dt\" //multiple\n            ,\n            value: addplasticCase0,\n            onChange: e => {\n              setAddplasticCase0(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 'PET',\n              children: \"PET\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 'HDPE',\n              children: \"HDPE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 'LDPE',\n              children: \"LDPE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 'All',\n              children: \"All types of plastic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this);\n\n      case 1:\n        return 'How much material do you need', /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Amount\",\n          type: \"number\",\n          value: addweightCase1,\n          size: \"medium\",\n          onChange: handleChange1,\n          className: clsx(classes.margin, classes.textField),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: \"Kg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 31\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this);\n\n      case 2:\n        return 'Do you want the material to be', /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: state.washed,\n              onChange: handleChange,\n              color: \"primary\",\n              name: \"washed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 11\n            }, this),\n            label: \"Washed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: state.WashedAndShredded,\n              onChange: handleChangeb,\n              color: \"primary\",\n              name: \"WashedAndShredded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 11\n            }, this),\n            label: \"Washed and Shredded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: state.NotProcessed,\n              onChange: handleChangec,\n              color: \"primary\",\n              name: \"NotProcessed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 11\n            }, this),\n            label: \"Not Processed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 7\n        }, this);\n\n      default:\n        return 'Unknown step';\n    }\n  }\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const final = () => {\n    if (state2.cash === true) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: handleReset,\n          className: classes.button,\n          children: \"Back to start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: sendpost,\n          className: classes.button,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (state2.online === true) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: handleReset,\n          className: classes.button,\n          children: \"Back to start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: sendpost,\n          className: classes.button,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const estimator = Estimator(addweightCase1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: GetStepContent(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleNext,\n                className: classes.button,\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)]\n      }, label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), activeStep === steps.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CardItemContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CardItems1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CardStructure\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"CardProductName\",\n            children: \"Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"left\",\n          variant: \"h6\",\n          children: \"Your order total is : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"left\",\n          variant: \"h6\",\n          children: \"How would you like to make your payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: state2.cash,\n              onChange: handleChanged,\n              name: \"cash\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this),\n            label: \"Cash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: state2.online,\n              disabled: true,\n              color: \"primary\",\n              onChange: handleChangee,\n              name: \"online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this),\n            label: \"Online\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), final(), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"CardLine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CardWeight\",\n          children: estimator\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VerticalLinearStepper, \"yBsLni3ZpGp9bSWgct5VlKUqO18=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = VerticalLinearStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerticalLinearStepper\");","map":{"version":3,"sources":["/Users/fraol/Desktop/IBM-frontend-backend/frontend/src/components/buy_material.js"],"names":["React","makeStyles","Stepper","Step","StepLabel","StepContent","Button","Typography","TextField","InputAdornment","InputLabel","MenuItem","FormControl","Select","FormControlLabel","Checkbox","FormGroup","useHistory","axios","clsx","Divider","Estimator","useStyles","theme","root","width","margin","spacing","formControl","minWidth","button","marginTop","marginRight","actionsContainer","marginBottom","resetContainer","padding","VerticalLinearStepper","state","setState","useState","washed","WashedAndShredded","NotProcessed","state2","setState2","cash","online","addplasticCase0","setAddplasticCase0","addweightCase1","setAddweightCase1","vals","methodselectedCase2","Object","keys","find","key","classes","activeStep","setActiveStep","steps","getSteps","history","sendpost","get","then","response","resp","data","length","id","send","method","url","body","user_id","plastic","weight","push","handleChange1","event","target","value","handleChange","checked","name","handleChangeb","handleChangec","handleChanged","handleChangee","GetStepContent","step","e","textField","startAdornment","handleNext","prevActiveStep","handleBack","handleReset","final","estimator","map","label","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { useHistory} from 'react-router-dom';\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport { Divider } from '@material-ui/core';\nimport Estimator from './estimator_payment';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 170,\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  },\n}));\n\nexport default function VerticalLinearStepper() {\n\n  const [state, setState] = React.useState({\n    washed: false,\n    WashedAndShredded: false,\n    NotProcessed: false\n  });\n\n  const [state2, setState2] = React.useState({\n    cash: false,\n    online: false\n  });\n  \n  const [addplasticCase0, setAddplasticCase0] = React.useState();\n  const [addweightCase1, setAddweightCase1] = React.useState({vals : '0'})\n  var methodselectedCase2 = Object.keys(state).find(key => state[key] === true)\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const history = useHistory();\n\n  const sendpost = async () => {\n    await axios.get('/theuserss')\n    .then((response)=> {\n        const resp = response.data[response.data.length - 1].id;\n        send(resp)\n      })\n    }\n\n  const send = async (resp) => {\n    await axios({\n    method: 'post',\n    url: '/userpost',\n    data: {body:{user_id:resp, plastic:addplasticCase0, weight:addweightCase1, method:methodselectedCase2}},\n  })\n  .then(history.push('/'))\n\n}\n  const handleChange1 = (event) => {\n    setAddweightCase1(event.target.value);\n  };\n\n  const handleChange = (event) => {\n    if (event.target.checked === true) {\n      setState({\n        washed: true,\n        WashedAndShredded: false,\n        NotProcessed: false\n      });\n    } else {\n      setState({ ...state, [event.target.name]: event.target.checked });\n    }\n  };\n\n  const handleChangeb = (event) => {\n    if (event.target.checked === true) {\n      setState({\n        washed: false,\n        WashedAndShredded: true,\n        NotProcessed: false\n      });\n    } else {\n      setState({ ...state, [event.target.name]: event.target.checked });\n    }\n  };\n\n  const handleChangec = (event) => {\n    if (event.target.checked === true) {\n      setState({\n        washed: false,\n        WashedAndShredded: false,\n        NotProcessed: true\n      });\n    } else {\n      setState({ ...state, [event.target.name]: event.target.checked });\n    }\n  };\n\n  const handleChanged = (event) => {\n    if (event.target.checked === true) {\n      setState2({\n        cash: true,\n        online: false\n      });\n    } else {\n      setState2({ ...state, [event.target.name]: event.target.checked });\n    }\n  };\n\n  const handleChangee = (event) => {\n    if (event.target.checked === true) {\n      setState2({\n        cash: false,\n        online: true,\n      });\n    } else {\n      setState2({ ...state, [event.target.name]: event.target.checked });\n    }\n  };\n\n  function getSteps() {\n    return ['Type of material', 'Amount of material', 'Condition of material'];\n  }\n  \n  function GetStepContent(step) {\n\n    switch (step) {\n      case 0:\n        return ('What material are you looking for',\n  \n        <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-label\">Type of material</InputLabel>\n        <Select\n          labelId=\"dl\"\n          id=\"dt\"\n          //multiple\n          value={addplasticCase0}\n          onChange={(e) => {\n            setAddplasticCase0(e.target.value)\n          }}\n        >\n          <MenuItem value={'PET'}>PET</MenuItem>\n          <MenuItem value={'HDPE'}>HDPE</MenuItem>\n          <MenuItem value={'LDPE'}>LDPE</MenuItem>\n          <MenuItem value={'All'}>All types of plastic</MenuItem>\n        </Select>\n      </FormControl>);\n\n  \n      case 1:\n        return ('How much material do you need', \n            <TextField\n            label=\"Amount\"\n            type=\"number\"\n            value={addweightCase1}\n            size='medium'      \n            onChange={handleChange1}\n            className={clsx(classes.margin, classes.textField)}\n            InputProps={{\n              startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>\n            }}\n          />\n        );\n      case 2:\n        return ('Do you want the material to be',\n        \n      <FormGroup row>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.washed}\n            onChange={handleChange}\n            color='primary'\n            name=\"washed\"\n          />\n        }\n        label=\"Washed\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.WashedAndShredded}\n            onChange={handleChangeb}\n            color='primary'\n            name=\"WashedAndShredded\"\n          />\n        }\n        label=\"Washed and Shredded\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.NotProcessed}\n            onChange={handleChangec}\n            color='primary'\n            name=\"NotProcessed\"\n          />\n        }\n        label=\"Not Processed\"\n      />\n    </FormGroup>)\n      default:\n        return 'Unknown step';\n    }\n  }\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    \n  };\n  \n  const final = () => {\n    if (state2.cash === true) {\n      return (\n        <div>\n          <Button color='primary' variant='contained' onClick={handleReset} className={classes.button}>\n            Back to start\n          </Button>\n          <Button color='primary' variant='contained' onClick={sendpost} className={classes.button}>\n            Submit\n          </Button>\n        </div>\n      )\n    } \n    if (state2.online === true) {\n      return (\n        <div>\n          <Button color='primary' variant='contained' onClick={handleReset} className={classes.button}>\n            Back to start\n          </Button>\n          <Button color='primary' variant='contained' onClick={sendpost} className={classes.button}>\n            Submit\n          </Button>\n        </div>\n      )\n    }\n  }\n\n  const estimator = Estimator(addweightCase1)\n  \n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <Typography>{GetStepContent(index)}</Typography>\n              <div className={classes.actionsContainer}>\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.button}\n                  >\n                    Back\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                  </Button>\n                </div>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n      <div className='CardItemContainer'>\n      <div className='CardItems1'>\n          <div className='CardStructure'>\n              <span className='CardProductName'>Payment</span>\n          </div>\n          <Typography align='left' variant='h6'>Your order total is : </Typography>\n          <Divider></Divider>\n          <Typography align='left' variant='h6'>How would you like to make your payment</Typography>\n\n          <FormGroup row>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={state2.cash}\n                  onChange={handleChanged}\n                  name=\"cash\"\n                  color='primary'\n                />\n              }\n              label=\"Cash\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={state2.online}\n                  disabled\n                  color='primary'\n                  onChange={handleChangee}\n                  name=\"online\"\n                />\n              }\n              label=\"Online\"\n            />\n          </FormGroup>\n          {final()}\n\n          <p className='CardLine'></p>\n          <div className='CardWeight'> \n          \n          {/* <Typography align='center'>You are set! Submit your request and we will notify you once it is filled.</Typography> */}\n          {estimator}\n        </div>\n        </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}